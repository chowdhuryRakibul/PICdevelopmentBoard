CCS PCH C Compiler, Version 5.015, 5967               10-Feb-18 14:37

               Filename:   C:\Users\Admin\Desktop\PIC Dev Board PCB by Shuvo Vai\Source Code\Source Code\Interrupt\main.lst

               ROM used:   272 bytes (1%)
                           Largest free fragment is 32492
               RAM used:   22 (1%) at main() level
                           23 (1%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   00EC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.4
004A:  GOTO   0054
004E:  BTFSC  FF2.1
0050:  GOTO   00C8
0054:  BTFSS  FF0.3
0056:  GOTO   0060
005A:  BTFSC  FF0.0
005C:  GOTO   00DA
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include <main.h> 
.................... #include <18F4550.h> 
.................... //////////// Standard Header file for the PIC18F4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOLPT1OSC                //Timer1 configured for higher power operation 
.................... //#FUSES RSS2048                  //Medium sized secure RAM 
.................... #FUSES NOWRTB                   //Boot block not write protected 
.................... #FUSES NOWRTC                   //Configuration registers not write protected 
.................... //#FUSES SDOC7                    //SDO is on RC7 
.................... #FUSES BORV43                   //Brownout reset at 4.3V 
.................... //#FUSES PLL_DIV_4              
.................... //#FUSES NODS                     //Deep Sleep operation is always disabled 
.................... //#FUSES HFOFST                   //High Frequency INTRC starts clocking CPU immediately 
.................... #FUSES NOLPT1OSC                //Timer1 configured for higher power operation 
.................... //#FUSES VREFNORM_CVREFNORM       //VREF and CVREF are mapped to their default pins 
.................... //#FUSES CCP2B5                   //CCP2 input/output multiplexed with RB5 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... //#FUSES VREFALT_CVREFNORM        //VREF is mapped to AVDD and AVSS; CVREF is mapped to default pins 
.................... #FUSES NOWRTC                   //Configuration registers not write protected 
.................... #FUSES NOWRTB                   //Boot block not write protected 
....................  
.................... #use delay(crystal=20000000) 
00A2:  CLRF   FEA
00A4:  MOVLW  16
00A6:  MOVWF  FE9
00A8:  MOVF   FEF,W
00AA:  BZ    00C6
00AC:  MOVLW  06
00AE:  MOVWF  01
00B0:  CLRF   00
00B2:  DECFSZ 00,F
00B4:  BRA    00B2
00B6:  DECFSZ 01,F
00B8:  BRA    00B0
00BA:  MOVLW  7B
00BC:  MOVWF  00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ FEF,F
00C4:  BRA    00AC
00C6:  RETURN 0
....................  
....................  
....................  
.................... #INT_EXT 
.................... void  EXT1_isr(void)  
.................... { 
....................    output_toggle(PIN_D6);  
00C8:  BCF    F95.6
00CA:  BTG    F8C.6
....................    delay_ms(10); // Debounce delay  
00CC:  MOVLW  0A
00CE:  MOVWF  16
00D0:  RCALL  00A2
....................    clear_interrupt(INT_EXT1); 
00D2:  BCF    FF0.0
....................     
.................... } 
....................  
00D4:  BCF    FF2.1
00D6:  GOTO   0060
.................... #INT_EXT1 
.................... void  EXT2_isr(void)  
.................... { 
....................    output_toggle(PIN_D7);  
00DA:  BCF    F95.7
00DC:  BTG    F8C.7
....................    delay_ms(10); // Debounce delay 
00DE:  MOVLW  0A
00E0:  MOVWF  16
00E2:  RCALL  00A2
....................    clear_interrupt(INT_EXT2); 
00E4:  BCF    FF0.1
....................     
00E6:  BCF    FF0.0
00E8:  GOTO   0060
.................... } 
....................  
.................... void main() 
00EC:  CLRF   FF8
00EE:  BCF    FD0.7
00F0:  BSF    07.7
00F2:  MOVF   FC1,W
00F4:  ANDLW  C0
00F6:  IORLW  0F
00F8:  MOVWF  FC1
00FA:  MOVLW  07
00FC:  MOVWF  FB4
.................... { 
....................    setup_spi(FALSE);  
00FE:  CLRF   FC6
....................    enable_interrupts(GLOBAL); 
0100:  MOVLW  C0
0102:  IORWF  FF2,F
....................    ext_int_edge(H_TO_L); 
0104:  BCF    FF1.6
....................    ext_int_edge(1,H_TO_L); 
0106:  BCF    FF1.5
....................    clear_interrupt(INT_EXT); 
0108:  BCF    FF2.1
....................    clear_interrupt(INT_EXT1); 
010A:  BCF    FF0.0
....................    enable_interrupts(INT_EXT); 
010C:  BSF    FF2.4
....................    enable_interrupts(INT_EXT1); 
010E:  BSF    FF0.3
....................     
....................  
....................    while(TRUE) 
....................    { 
0110:  BRA    0110
....................       //output_low(PIN_D6); 
....................       //output_low(PIN_D7); 
....................    } 
....................  
.................... } 
0112:  SLEEP 

Configuration Fuses:
   Word  1: CC04   PLL5 CPUDIV1 NOUSBDIV HS FCMEN IESO
   Word  2: 0E2E   PUT BROWNOUT BORV43 VREGEN NOWDT WDT128
   Word  3: 8300   CCP2C1 PBADEN NOLPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
