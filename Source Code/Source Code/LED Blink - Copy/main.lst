CCS PCH C Compiler, Version 5.015, 5967               10-Feb-18 15:00

               Filename:   C:\Users\Admin\Desktop\PIC Dev Board PCB by Shuvo Vai\Source Code\Source Code\LED Blink - Copy\main.lst

               ROM used:   104 bytes (0%)
                           Largest free fragment is 32664
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   002A
.................... //#include <main.h> 
....................  
.................... #include <18F4550.h> 
.................... //////////// Standard Header file for the PIC18F4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #fuses NOMCLR INTRC_IO 
.................... #use delay(clock=8000000) 
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  02
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  97
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETURN 0
.................... void main() 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  MOVLW  70
0030:  MOVWF  FD3
0032:  MOVF   FD3,W
0034:  MOVF   FC1,W
0036:  ANDLW  C0
0038:  IORLW  0F
003A:  MOVWF  FC1
003C:  MOVLW  07
003E:  MOVWF  FB4
.................... { 
....................     
....................    while(TRUE) 
....................    { 
....................       output_high(PIN_C2); 
0040:  BCF    F94.2
0042:  BSF    F8B.2
....................       delay_ms(500); 
0044:  MOVLW  02
0046:  MOVWF  05
0048:  MOVLW  FA
004A:  MOVWF  06
004C:  RCALL  0004
004E:  DECFSZ 05,F
0050:  BRA    0048
....................       output_low(PIN_C2); 
0052:  BCF    F94.2
0054:  BCF    F8B.2
....................       delay_ms(500); 
0056:  MOVLW  02
0058:  MOVWF  05
005A:  MOVLW  FA
005C:  MOVWF  06
005E:  RCALL  0004
0060:  DECFSZ 05,F
0062:  BRA    005A
0064:  BRA    0040
....................    } 
....................  
.................... } 
0066:  SLEEP 

Configuration Fuses:
   Word  1: C83F   PLL12 CPUDIV4 USBDIV INTRC_IO FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 0700   CCP2C1 PBADEN LPT1OSC NOMCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
